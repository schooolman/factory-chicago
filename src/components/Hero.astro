---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
export interface Props {
  title: string;
  subtitle: string;
  imageLeft: string;
  altText?: string; // Optional alt text for the images
  imageRight: string;
  altTextRight?: string; // Optional alt text for the right image
  styleOption?: "default" | "alternative"; // Add styleOption prop
}

const {
  title,
  subtitle,
  imageLeft,
  altText,
  imageRight,
  altTextRight,
  styleOption = "default",
} = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif,svg}"
);

// error handling for image paths
if (!images[imageLeft])
  throw new Error(
    `"${imageLeft}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
if (!images[imageRight])
  throw new Error(
    `"${imageRight}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`
  );
---

<div id="hero" class={styleOption}>
  {
    styleOption === "alternative" ? (
      <div class="hero-main-content">
        <div class="corner-image">
          <div class="image-container">
            <Image
              src={images[imageRight]()}
              alt={altText ?? ""}
              class="hero-image"
            />
          </div>
        </div>
        <div class="hero-content">
          <h1>{title}</h1>
          <p>{subtitle}</p>
        </div>
        <div class="hero-images">
          <div class="image-container">
            <img src={imageLeft} alt="Left Hero Image" class="hero-image" />
          </div>
        </div>
      </div>
    ) : (
      <div class="hero-main-content">
        <div class="hero-content">
          <h1>{title}</h1>
          <p>{subtitle}</p>
        </div>
        <div class="hero-images">
          <div class="image-container">
            <Image
              src={images[imageLeft]()}
              alt={altText ?? ""}
              class="hero-image"
            />
          </div>
          <div class="image-container">
            <Image
              src={images[imageRight]()}
              alt={altTextRight ?? ""}
              class="hero-image"
            />
          </div>
        </div>
      </div>
    )
  }
</div>

<style>
  /* General Styles */
  #hero {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 50px 0;

    font-family: "Compacta Blk BT", Inter, Roboto, Arial, sans-serif;
    color: #ffffff;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8); /* Add text shadow for a bold look */
  }

  .hero-main-content {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
    justify-content: space-between;
    max-width: 1440px;
    width: 100%;
    gap: 20px;
  }

  .hero-content {
    flex: 1;
    text-align: left;
    padding-right: 20px;
    border-left: 5px solid #ffcc00; /* Add a bold industrial accent */
    padding-left: 20px;
  }

  h1 {
    font-size: 64px;
    font-weight: normal;
    margin-bottom: 20px;
    text-transform: uppercase;
    letter-spacing: 2px;
    line-height: 1.2;
  }

  p {
    font-size: 20px;
    font-family: "Encode Sans", Inter, Roboto, sans-serif;
    margin: 0;
    line-height: 1.8;
    max-width: 600px;
  }

  .hero-images {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
  }

  .image-container {
    width: 80%;
    max-height: 400px;
    overflow: hidden;
    border: 3px solid #ffcc00; /* Add industrial yellow border */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5); /* Add shadow for depth */
    position: relative; /* Ensure pseudo-elements are positioned relative to this element */
  }

  .hero-image {
    width: 100%;
    object-fit: cover;
    object-position: top;
    position: relative; /* Ensure pseudo-elements are positioned relative to this element */
    z-index: 0; /* Ensure the image stays below the pseudo-elements */
  }

  .default .image-container::before,
  .default .image-container::after {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    z-index: 1;
  }

  .default .image-container:nth-child(1):before {
    top: 0;
    left: 0;
    border-width: 200px 200px 0 0;
    border-color: #ffcc00 transparent transparent transparent;
  }

  .default .image-container:nth-child(1):after {
    bottom: 0;
    right: 0;
    border-width: 0 0 200px 200px;
    border-color: transparent transparent #ffcc00 transparent;
  }

  .default .image-container:nth-child(2):before {
    top: 0;
    right: 0;
    border-width: 200px 0 0 200px;
    border-color: #ffcc00 transparent transparent transparent;
  }

  .default .image-container:nth-child(2):after {
    bottom: 0;
    left: 0;
    border-width: 0 200px 200px 0;
    border-color: transparent transparent #ffcc00 transparent;
  }

  /* Default Style */
  .default {
    background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.9)),
      url("/src/assets/background-texture.jpg"); /* Add a grunge texture background */
    background-size: cover;
    background-position: center;
  }

  /* Alternative Style */
  .alternative {
    margin-top: 50px;
    background: linear-gradient(-73deg, #85a3d6 49.9%, #335899 50%);
    color: #39273f; /* Dark text for contrast */
    text-shadow: none; /* Remove text shadow for a cleaner look */
  }

  .alternative .hero-content {
    margin-bottom: 50px;
    margin-left: 20px;
    border-left: none;
  }

  .alternative .corner-image {
    position: absolute;
    top: -50px;
    right: 0;
    height: 500px;
    width: 500px;
    overflow: hidden;
  }

  .alternative .corner-image .image-container {
    width: 100%;
    max-height: none;
    border: none; /* Remove border for the corner image */
    box-shadow: none; /* Remove shadow for the corner image */
    transform: rotate(-20deg) translate(120px, -90px);
    opacity: 0.2;
  }

  .alternative .hero-main-content {
    width: 100%;
    flex-direction: column;
    align-items: baseline;
    position: relative;
  }

  .alternative .image-container {
    position: relative;
    max-height: 500px;
    margin-bottom: -14%;
  }

  @media screen and (max-width: 768px) {
    /* Main content layout */
    .hero-main-content {
      flex-direction: column; /* Stack content vertically */
      text-align: center; /* Center-align text */
      gap: 30px; /* Add spacing between sections */
      padding: 20px; /* Add padding for better spacing */
    }

    /* Hero content (text) */
    .hero-content {
      padding: 0; /* Remove padding for a cleaner layout */
      border-left: none; /* Remove the left border */
    }

    h1 {
      font-size: 28px; /* Reduce font size for smaller screens */
      margin-bottom: 15px; /* Add spacing below the title */
      line-height: 1.3; /* Adjust line height for better readability */
    }

    p {
      font-size: 16px; /* Reduce font size for smaller screens */
      line-height: 1.6; /* Adjust line height for better readability */
      max-width: 100%; /* Ensure text spans the full width */
      margin: 0 auto; /* Center the text */
    }

    /* Hero images */
    .hero-images {
      flex-direction: column; /* Stack images vertically */
      gap: 15px; /* Add spacing between images */
      align-items: center; /* Center-align images */
    }

    .image-container {
      width: 90%; /* Reduce image width for smaller screens */
      max-height: 250px; /* Limit image height */
      margin: 0 auto; /* Center the images */
      border: 2px solid #ffcc00; /* Keep the industrial yellow border */
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.4); /* Reduce shadow intensity */
    }

    .hero-image {
      transform: translateY(-10%);
      object-fit: cover; /* Ensure images are cropped properly */
      object-position: center; /* Center the focus of the image */
    }

    /* Alternative style adjustments */
    .alternative .hero-main-content {
      align-items: center; /* Center-align content */
    }

    .alternative .corner-image {
      display: none; /* Hide the corner image on mobile for simplicity */
    }

    .alternative .image-container {
      max-height: 200px; /* Reduce image height for alternative style */
    }

    .default .image-container:nth-child(1):before {
      border-width: 100px 100px 0 0;
    }

    .default .image-container:nth-child(1):after {
      border-width: 0 0 100px 100px;
    }

    .default .image-container:nth-child(2):before {
      border-width: 100px 0 0 100px;
    }

    .default .image-container:nth-child(2):after {
      border-width: 0 100px 100px 0;
    }
  }
</style>
